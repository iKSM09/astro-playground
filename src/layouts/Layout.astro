---
interface Props {
  title: string;
}

const { title } = Astro.props;

const links = {
  "css-perspective-playground": "CSS Perspective Playground",
  "quiz-app": "Quiz App",
} as const;

type LinkKeys = keyof typeof links;
type LinkValues = (typeof links)[LinkKeys];
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content="Astro description" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
  </head>
  <body>
    <div class="sticky">
      <ul class="flex gap-3 px-2 my-3">
        {
          Object.keys(links).map((link) => (
            <li class="text-white font-semibold text-sm hover:text-purple-400 hover:underline hover:decoration-purple-200">
              <a href={link}>{links[link as LinkKeys] as LinkValues}</a>
            </li>
          ))
        }
      </ul>
      <hr />
    </div>
    <div class="relative">
      <slot />
    </div>
  </body>
</html>

<style is:global>
  :root {
    --accent: 136, 58, 234;
    --accent-light: 224, 204, 250;
    --accent-dark: 49, 10, 101;
    --accent-gradient: linear-gradient(
      45deg,
      rgb(var(--accent)),
      rgb(var(--accent-light)) 30%,
      white 60%
    );
  }
  html {
    box-sizing: border-box;
    width: 100%;
    height: 100%;
  }

  *,
  *:before,
  *:after {
    box-sizing: inherit;
    padding: 0;
    margin: 0;
  }

  body {
    font-family: sans-serif;
    height: 100%;
    margin: 0;
    background: #261c33;
    /* display: flex; */
    /* align-items: center; */
    /* justify-content: center; */
  }
  code {
    font-family:
      Menlo,
      Monaco,
      Lucida Console,
      Liberation Mono,
      DejaVu Sans Mono,
      Bitstream Vera Sans Mono,
      Courier New,
      monospace;
  }
</style>
